@use "theme/src/screens";
@use "web/core/src/js/components/mobile-banner/variables.module.scss" as mobile-banner;
@use "./variables.module.scss";

$height-breakpoint: 640px;

.container {
  height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.grid {
  height: 100%;
  width: 100%;
  display: grid;
  justify-content: center;
  align-items: center;
  overflow: auto;
  // very small screens: 1 column, 1 row (video is hidden)
  grid-template-rows: 1fr;
  grid-template-columns: 1fr;

  row-gap: 16px;
  // We need padding to accommodate for the mobile banner at the bottom, which is fixed position
  padding-bottom: mobile-banner.$height + 8px;

  @media (min-height: $height-breakpoint) {
    // above a minimum height, we create another row for the video
    grid-template-rows: 1fr 425px;

    @media (min-width: variables.$mobile-layout-breakpoint) {
      // above a certain height and width, we use 2 column, 1 row layout
      grid-template-rows: 1fr;
    }
  }

  @media (min-width: variables.$mobile-layout-breakpoint) {
    // Above a min width (but still below the min-height), we use 2 column layout
    grid-template-columns: 1fr minmax(450px, 30%);
    padding-bottom: 0;
  }
}

.videoContainer {
  // This container is required for iOS mobile web, otherwise the video gets too tall
  // for some reason (fixes DEV-10622)
  height: 100%;
  overflow: hidden;
  display: none; //hide the video in 1x1 layout

  // display the video in 1x2 or 2x1 layout
  @media (min-height: $height-breakpoint) {
    display: block;
  }
  @media (min-width: variables.$mobile-layout-breakpoint) {
    display: block;
  }
}

.video {
  height: 100%;
  width: 100%;
  object-fit: cover;
  overflow: hidden;
}
