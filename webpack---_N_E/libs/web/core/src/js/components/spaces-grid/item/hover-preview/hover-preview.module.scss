@use "sass:math";

@use "theme/src/animations";
@use "theme/src/colors";
@use "theme/src/screens";
@use "theme/src/text";
@use "../variables.module.scss";

$transition-duration: 250ms;
$scale: 1.07;
$aspect-ratio: variables.$thumbnail-aspect-ratio-small;

@media (min-width: screens.$sm) {
  $scale: 1.16 !global;
}

@media (min-width: screens.$xs) {
  $aspect-ratio: variables.$thumbnail-aspect-ratio-large !global;
}

.container {
  // Make the outer container have the same aspect ratio as the thumbnail
  // so that the transform origin is in the center of the thumbnail
  @extend .thumbnailPlaceholder;

  position: absolute;
  inset: 0;
  overflow: visible;
  z-index: 1;
  pointer-events: none;
}

.finalSizeContainer {
  position: absolute;
  inset: -50% * ($scale - 1);
}

.scaleInContainer {
  // To have correct font sizes we want the scale to be 1 after transition ends
  // So we start from a scale of 1 / $scale and transition to 1
  position: absolute;
  inset: 0;
  scale: math.div(1, $scale);

  transition: all $transition-duration;

  &.visible {
    scale: 1;
    pointer-events: all;

    .withFade {
      opacity: 1;
    }
  }
}

.withFade {
  @include animations.fadeIn($delay: 0, $duration: $transition-duration);
  opacity: 0;
  transition: all $transition-duration;
}

.thumbnailPlaceholder {
  width: 100%;
  aspect-ratio: $aspect-ratio;
}

.innerContainer {
  @extend .withFade;

  position: absolute;
  display: grid;
  width: 100%;
  grid-template-columns: 100%;
  grid-template-rows: 1fr auto;

  background-color: colors.$white;
  border-radius: variables.$image-border-radius;
  box-shadow: 0 32px 64px rgba(0, 0, 0, 0.2);
}

// We don't fade the thumbnail because it looks bad with both fade and scale
.thumbnailContainer {
  border-radius: variables.$image-border-radius;
  position: absolute;
  inset: 0;
  overflow: hidden;
  aspect-ratio: $aspect-ratio;
  z-index: 1;

  &.flatBottom {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}

.cubemapPreviewContainer {
  position: absolute;
  inset: 0;
  z-index: 1;
}

.cubemapPreview {
  // .withFade will be added to the cubemap preview element once it's loaded
  opacity: 0;

  // three-fiber sets a fixed px size for the canvas when it's created
  // The size which might be incorrect if it happens during the transition so we need to override it
  canvas {
    width: 100% !important;
    height: 100% !important;
    transform-origin: top left;
  }
}

.loaderContainer {
  position: absolute;
  top: 8px;
  left: 8px;
  z-index: 1;
}

.loader {
  width: 14px;
  height: 14px;
}

.thumbnailOverlay {
  @extend .withFade;
  @extend .thumbnailPlaceholder;

  position: absolute;
  z-index: 1;
  pointer-events: none;
}

.spaceInfo {
  position: relative;
  display: grid;
  margin: 16px;
  gap: 16px;
}

.tags {
  display: flex;
  flex-wrap: nowrap;
  gap: 4px;

  .tagAnchor {
    text-decoration: none;
  }

  .tag {
    font-family: text.$real-text;
    font-size: text.rem(12px);
    font-weight: text.$real-head-medium;
    white-space: nowrap;
  }
}

.description {
  color: colors.$black;
  font-family: text.$real-text;
  font-size: text.rem(14px);
}
